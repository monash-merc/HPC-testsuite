proc runsimple { test_name command_line passtext } {
    
    global verbose
    # When verbose, tell the user what we are running (can be set in config/unix.exp or in each script
    if { $verbose > 0 } {
        send_user "++ Test \"$test_name\": $command_line\n"
        send_user "++   for result: \"$passtext\"\n"
    }

    # Run the program. {*} is required to expand arguments and not treat them as seperate files
    spawn {*}$command_line

    expect {
        # Check for any warning messages in the output first
        Warning { fail "$test_name: warning: $expect_out(buffer)" }

        # Check for any error messages
        ERROR { fail "$test_name: error: $expect_out(buffer)" }

        # The string indicating successful completion
        $passtext { pass "$test_name\n" }

        # EOF and timeout only come after everything else. EOF must be an error.
        eof { fail "$test_name: EOF\n $expect_out(buffer)" }

        # Timeout requires inspection to determine the cause of failure.
        timeout { unresolved "$test_name: timeout" }
    }
}
